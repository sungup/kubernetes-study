apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-config
  labels:
    name: prometheus-server-config
  namespace: monitoring
data:
  file_discovery.yml: |-
    - targets:
      - mon.sungup.io:9100
      - osd-node01.sungup.io:9100
      - osd-node02.sungup.io:9100
      - osd-node03.sungup.io:9100
      labels:
        job: node-exporter
        system: ceph

  prometehus.rules: |-
    groups:
    - name: container memory alert
      rules:
      - alert: container memory usage rate is very high ( > 55%)
        expr: sum(container_memory_working_set_bytes{pod!="", name=""}) / sum(kube_node_status_allocatable_memory_bytes{}) * 100 > 55
        for: 1m
        labels:
          severity: fatal
        annotations:
          summary: High Memory Usage on {{ $labels.instance }}
          identifier: "{{ $labels.instance }}"
          description: "{{ $labels.job }} Memory Usage: {{ $value }}"
    - name: container CPU alert
      rules:
      - alert: container CPU usage rate is very high ( > 10%)
        expr: sum(rate(container_cpu_usage_seconds_total{pod!=""}[1m])) / sum(machine_cpu_cores{}) * 100 > 10
        for: 1m
        labels:
          severity: fatal
        annotations:
          summary: High CPU Usage

  prometheus.yml: |-
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    # altert manager
    rule_files:
    - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:9093"

    scrape_configs:
    - job_name: 'kubernetes-cadvisor'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: labeldrop
        regex: beta_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

    - job_name: 'kuberntes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names: [default]
        selectors:
        - role: endpoints
          field: "metadata.name=kubernetes"
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    - job_name: 'kubernetes-nodes'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - action: labeldrop
        regex: beta_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - action: labeldrop
        regex: (controller_revision_hash|pod_template_generation|pod_template_hash)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

    - job_name: 'kubernetes-service-endpoints'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

    - job_name: 'kube-state-metrics'
      static_configs:
      - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']

    - job_name: 'node-exporter'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: [monitoring]
        selectors:
        - role: pod
          label: "name=node-exporter"
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_node_name]
        regex: (.+)
        target_label: instance
        replacement: ${1}
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
        replacement: pod_${1}
      - action: labeldrop
        regex: pod_(controller_revision_hash|pod_template_generation)

    - job_name: 'external_nodes'
      file_sd_configs:
      - files:
        - file_discovery.yml
        refresh_interval: 1m
